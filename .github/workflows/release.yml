name: Release
on:
  push:
    tags:
      - '*'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --tags --force origin
      - name: GitTools
        uses: GitTools/actions/checkout@v0.9.15
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: GitTools/actions/execute@v0.9.15
        id: GitTools
      - name: Display GitTools outputs
        run: |
          echo "Major: ${{ steps.GitTools.outputs.major }}"
          echo "Minor: ${{ steps.GitTools.outputs.minor }}"
          echo "Patch: ${{ steps.GitTools.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.GitTools.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.GitTools.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.GitTools.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.GitTools.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.GitTools.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.GitTools.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.GitTools.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.GitTools.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.GitTools.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.GitTools.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.GitTools.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.GitTools.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.GitTools.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.GitTools.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.GitTools.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.GitTools.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.GitTools.outputs.branchName }}"
          echo "EscapedBranchName: ${{ steps.GitTools.outputs.escapedBranchName }}"
          echo "Sha: ${{ steps.GitTools.outputs.sha }}"
          echo "ShortSha: ${{ steps.GitTools.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.GitTools.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.GitTools.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.GitTools.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.GitTools.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.GitTools.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.GitTools.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.GitTools.outputs.commitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ steps.GitTools.outputs.uncommittedChanges }}"
          echo "CommitDate: ${{ steps.GitTools.outputs.commitDate }}"
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish package
        run: mvn --batch-mode validate
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
