name: Release
on:
  push:
    tags:
      - '*'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --tags --force origin
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.7
        id: gitversion
      - name: Display GitTools outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
            echo "Minor: ${{ steps.gitversion.outputs.minor }}"
            echo "Patch: ${{ steps.gitversion.outputs.patch }}"
            echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
            echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
            echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
            echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
            echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
            echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
            echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
            echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
            echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
            echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
            echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
            echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
            echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
            echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
            echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
            echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
            echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
            echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
            echo "Sha: ${{ steps.gitversion.outputs.sha }}"
            echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
            echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
            echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
            echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
            echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
            echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
            echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
            echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
            echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
            echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish package
        run: mvn --batch-mode validate
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
